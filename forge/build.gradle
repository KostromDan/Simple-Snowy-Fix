plugins {
    id 'com.github.johnrengelman.shadow'
    id "me.shedaniel.unified-publishing" version "0.1.+"
}

loom {
    forge {
        mixinConfig "simple_snowy_fix.mixins.json"
        mixinConfig "simple_snowy_fix-forge.mixins.json"
    }
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
    forge "net.minecraftforge:forge:$rootProject.forge_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionForge')

    modImplementation "curse.maven:regions-unexplored-659110:5558225"
    modImplementation "curse.maven:dynamictrees-252818:6655713"
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/mods.toml') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    inputFile.set shadowJar.archiveFile
}

unifiedPublishing {
    project {
        gameVersions = ["1.18.2", "1.19.2", "1.19.3", "1.19.4", "1.20.1"]
        gameLoaders = ["forge", "neoforge"]

        displayName = tasks.remapJar.archiveFile.get().asFile.name
        version = mod_version
        changelog = file('../changelog.md').text
        releaseType = release_type

        mainPublication tasks.remapJar

        var cfToken = System.getenv("CF_TOKEN")
        if (cfToken != null) {
            curseforge {
                token = cfToken
                id = curseforge_project_id
            }
        }

        var mrToken = System.getenv("MODRINTH_TOKEN")
        if (mrToken != null) {
            modrinth {
                token = mrToken
                id = modrinth_project_id
            }
        }
    }
}